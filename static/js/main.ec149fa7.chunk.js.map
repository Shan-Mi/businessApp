{"version":3,"sources":["data/UserKit.js","components/FormInput.styles.jsx","components/FormInput.jsx","components/RegisterForm.styles.jsx","components/MyBtn.styles.jsx","data/Schema.js","components/RegisterForm.jsx","GlobalStyle.js","pages/CustomerPage.styles.jsx","components/EditingFormInput.jsx","components/LoggedinHeader.styles.jsx","components/LoggedinHeader.jsx","context/GlobalContext.jsx","pages/CustomerPage.jsx","components/CreateNewCustomer.jsx","pages/Home.jsx","pages/Login.styles.jsx","pages/Login.jsx","pages/NotFoundPage.jsx","pages/InvalidPage.jsx","App.js","serviceWorker.js","index.js"],"names":["ROOT_URL","firstName","lastName","email","password","organisationName","organisationKind","payload","url","fetch","method","headers","this","getPublicHeaders","body","JSON","stringify","uid","token","signal","getPrivateHeaders","id","localStorage","setItem","getItem","Authorization","getToken","InputFlexContainer","styled","div","InputOutsideContainer","FormInput","value","placeholder","register","errors","htmlFor","ref","type","name","message","FlexContainer","registerFormStyles","css","newCustomerFormStyles","customerUpdateStyles","FormContainer","form","props","customer","update","MyBtn","button","LogoutBtnStyles","LoginBtnStyles","BtnSmall","logout","login","schema","Yup","shape","min","max","required","organisationNr","trim","vatNr","matches","reference","paymentTerm","website","phoneNumber","schemaRegister","oneOf","userKit","UserKit","RegisterForm","useState","setEmail","isRegisterSucessful","setIsRegisterSucessful","useForm","resolver","yupResolver","handleSubmit","className","onSubmit","then","res","json","data","map","index","key","GlobalStyle","createGlobalStyle","CustomerInfoContainer","EditingFormInput","nameString","setValue","defaultValue","onChange","e","currentTarget","LoggedinHeaderContainer","LoggedinHeader","user","history","useHistory","onClick","deleteToken","push","UserContext","createContext","GlobalContext","children","customers","setCustomers","setUser","customerNr","setCustomerNr","React","createElement","Provider","CustomerPage","useParams","useContext","originalCustomer","setOriginalCustomer","setName","setOrganisationNr","setPaymentTerm","setPhoneNumber","setReference","setVatNr","setWebsite","isLoading","setIsLoading","isUpdating","setIsUpdating","setCustomerDetailInfoArea","getCustomer","results","filter","currentCustomer","useEffect","getLoginUser","closeEditing","saveUpdate","updatedCustomer","editCustomerInfo","customerDetailList","drawUpdateCustomerInfoArea","deleteCustomer","handleDelete","CreateNewCustomerForm","showAddCustomerForm","setShowAddCustomerForm","setShowAddBtn","BlurLayerContainer","createCustomer","Home","showAddBtn","getCustomerList","count","AbortController","handleAddCustomer","sort","a","b","to","renderCustomers","CreateNewCustomer","role","aria-label","LoginFormContainer","WarningContainer","p","Login","searchString","location","search","urlParameters","URLSearchParams","get","loginEmail","setLoginEmail","loginPassword","setLoginPassword","setErrors","isActiveUser","setIsActiveUser","abortController","activateUser","ok","abort","preventDefault","setToken","target","NotFoundPage","src","alt","process","Component","MessageContainer","InvalidPage","RootContainer","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ec149fa7.chunk.js","sourcesContent":["const ROOT_URL = \"https://frebi.willandskill.eu/\";\r\n\r\nexport default class {\r\n  async register(\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    password,\r\n    organisationName,\r\n    organisationKind\r\n  ) {\r\n    const payload = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      organisationName,\r\n      organisationKind,\r\n    };\r\n\r\n    const url = `${ROOT_URL}auth/users/`;\r\n\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async activateUser(uid, token, signal) {\r\n    const url = `${ROOT_URL}auth/users/activate/`;\r\n    const payload = { uid, token };\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      signal,\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async getLoginUser() {\r\n    const url = `${ROOT_URL}api/v1/me`;\r\n    return fetch(url, {\r\n      method: \"GET\",\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n\r\n  async login(email, password) {\r\n    const url = `${ROOT_URL}api-token-auth/`;\r\n    const payload = { email, password };\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async getCustomerList() {\r\n    const url = `${ROOT_URL}api/v1/customers`;\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n\r\n  async getCustomer(id) {\r\n    const url = `${ROOT_URL}api/v1/customers/${id}`;\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n\r\n  async createCustomer(payload) {\r\n    const url = `${ROOT_URL}api/v1/customers`;\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPrivateHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async deleteCustomer(id) {\r\n    const url = `${ROOT_URL}api/v1/customers/${id}/ `;\r\n    return fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n\r\n  async editCustomerInfo(id, payload) {\r\n    const url = `${ROOT_URL}api/v1/customers/${id}/ `;\r\n\r\n    return fetch(url, {\r\n      method: \"PUT\",\r\n      headers: this.getPrivateHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(\"BUSINESS_TOKEN\", token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"BUSINESS_TOKEN\");\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.setItem(\"BUSINESS_TOKEN\", \"\");\r\n  }\r\n\r\n  getPublicHeaders() {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n  }\r\n\r\n  getPrivateHeaders() {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${this.getToken()}`,\r\n    };\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputFlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  flex-basis: 1;\r\n  text-align: left;\r\n\r\n  label {\r\n    padding-bottom: 10px;\r\n  }\r\n  input {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nexport const InputOutsideContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  margin: 0.5rem auto;\r\n\r\n  p {\r\n    color: red;\r\n    text-align: left;\r\n    margin: 0 0 0.5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { InputFlexContainer, InputOutsideContainer } from \"./FormInput.styles\";\n\nconst FormInput = ({ value, placeholder, register, errors }) => {\n  return (\n    <InputOutsideContainer>\n      <InputFlexContainer>\n        <label htmlFor={value}>{placeholder}</label>\n        <input\n          ref={register}\n          id={value}\n          type={value}\n          name={value}\n          errors={errors[value]}\n        />\n      </InputFlexContainer>\n      {errors[value] && <p>{errors[value].message}</p>}\n    </InputOutsideContainer>\n  );\n};\n\nexport default FormInput;\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  h2 {\r\n    font-family: \"Pacifico\", cursive;\r\n    font-size: 3rem;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .form-title {\r\n    font-family: \"Pacifico\", cursive;\r\n    font-size: 1rem;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst registerFormStyles = css`\r\n  padding: 2rem 3rem 4rem;\r\n`;\r\n\r\nconst newCustomerFormStyles = css`\r\n  padding: 1rem 2rem;\r\n  width: 40vw;\r\n  position: relative;\r\n  position: absolute;\r\n  top: 6vh;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  button {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst customerUpdateStyles = css`\r\n  margin-top: 2rem;\r\n  padding: 2rem 0;\r\n  position: relative;\r\n\r\n  button {\r\n    &:hover {\r\n      background-color: #2591ff;\r\n      color: #260d0d;\r\n    }\r\n  }\r\n`;\r\n\r\nconst getFormStyles = (props) => {\r\n  if (props.customer) {\r\n    return newCustomerFormStyles;\r\n  }\r\n  if (props.update) {\r\n    return customerUpdateStyles;\r\n  }\r\n  return registerFormStyles;\r\n};\r\n\r\nexport const FormContainer = styled.form`\r\n  background: #32425b;\r\n  width: 50vw;\r\n  min-width: 400px;\r\n  margin: auto;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  label {\r\n    color: #e1e5e8;\r\n  }\r\n\r\n  input {\r\n    height: 35px;\r\n    border: 1px #fff solid;\r\n    border-radius: 4px;\r\n    background-color: #32425b;\r\n    color: white;\r\n\r\n    &:hover {\r\n      background-color: #4b484f;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background-color: #1ed5b9;\r\n    width: 300px;\r\n    color: #fff;\r\n    font-weight: 400;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n  ${getFormStyles}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const MyBtn = styled.button`\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n  border: 1px #00000030 solid;\r\n  margin-top: 1rem;\r\n  font-size: 1rem;\r\n\r\n  &:hover {\r\n    color: #fff6e1;\r\n    background-color: #2591ff;\r\n  }\r\n`;\r\n\r\nconst LogoutBtnStyles = css`\r\n  background-color: #1ed5b9;\r\n  color: white;\r\n  margin-left: 2rem;\r\n  padding: 5px 15px;\r\n  margin-left: 2rem;\r\n  font-size: 1.2rem;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: #f15789;\r\n  }\r\n`;\r\n\r\nconst LoginBtnStyles = css`\r\n  background-color: #2591ff;\r\n  color: white;\r\n`;\r\n\r\nconst getBtnSmallStyles = (props) => {\r\n  if (props.logout) {\r\n    return LogoutBtnStyles;\r\n  }\r\n  if (props.login) {\r\n    return LoginBtnStyles;\r\n  }\r\n};\r\n\r\nexport const BtnSmall = styled.button`\r\n  padding: 3px 10px;\r\n  border-radius: 2px;\r\n  border: none;\r\n  font-family: \"PT Sans Narrow\", sans-serif;\r\n\r\n  &:hover {\r\n    color: white;\r\n  }\r\n\r\n  ${getBtnSmallStyles};\r\n`;\r\n","import * as Yup from \"yup\";\n\nexport const schema = Yup.object().shape({\n  name: Yup.string()\n    .min(1, \"Must be at least 1 character\")\n    .max(50, \"Maxmum 50 characters\")\n    .required(\"Required\"),\n  organisationNr: Yup.string().trim().max(30, \"Maxmum characters 30\"),\n  vatNr: Yup.string()\n    .trim()\n    .matches(/^se\\d{10}$/i, \"SE + 10 digits: SE1234567890\")\n    .required(\"Required\"),\n  reference: Yup.string().trim().max(50, \"Maxmum 50 characters\"),\n  paymentTerm: Yup.string()\n    .matches(\n      /^(\\d|\\d{1,9}|1\\d{1,9}|20\\d{8}|213\\d{7}|2146\\d{6}|21473\\d{5}|214747\\d{4}|2147482\\d{3}|21474835\\d{2}|214748364[0-7])$/,\n      \"Input a number between 0 and 2147483647\"\n    )\n    .required(\"Required\"),\n  website: Yup.string()\n    .trim()\n    .matches(\n      /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n      \"Enter correct url!\"\n    )\n    .max(50, \"Maxmum 50 characters\"),\n  email: Yup.string()\n    .email(\"Invalid format email-address\")\n    .max(254, \"Maxmum 254 characters\"),\n  phoneNumber: Yup.string().matches(\n    /^(?=(.*\\d){8})[a-zA-Z\\d]{10,20}$/,\n    \"Minmun 10, Maxmum 20 digital\"\n  ),\n});\n\nconst REGEX_PASSWORD = /^(?=.*\\d)(?=.*[a-z])(?=.*[!.-])(?=.*[a-zA-Z]).{8,}$/;\nexport const schemaRegister = Yup.object().shape({\n  firstName: Yup.string()\n    .min(1, \"Must be at least 1 character\")\n    .max(30, \"Maxmum 50 characters.\"),\n  lastName: Yup.string()\n    .min(1, \"Must be at least 1 character\")\n    .max(30, \"Maxmum 50 characters.\"),\n  email: Yup.string()\n    .email(\"Invalid format email-address\")\n    .max(254, \"Maxmum 254 characters\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .required(\"No password provided.\")\n    .min(1, \"At least 1 character.\")\n    .matches(\n      REGEX_PASSWORD,\n      \"Password needs to contain at least 1 number, 1 char and 1 of (! , -)\"\n    ),\n  organisationName: Yup.string(),\n  organisationKind: Yup.mixed().oneOf([\"0\", \"1\", \"2\"]),\n});\n","import React, { useState } from \"react\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport FormInput from \"./FormInput\";\r\nimport { FlexContainer, FormContainer } from \"./RegisterForm.styles\";\r\nimport { MyBtn } from \"./MyBtn.styles\";\r\nimport { schemaRegister } from \"../data/Schema\";\r\n\r\nconst userKit = new UserKit();\r\n\r\nconst RegisterForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isRegisterSucessful, setIsRegisterSucessful] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schemaRegister),\r\n  });\r\n  const onSubmit = ({\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    password,\r\n    organisationName,\r\n    organisationKind,\r\n  }) => {\r\n    userKit\r\n      .register(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        organisationName,\r\n        organisationKind\r\n      )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setIsRegisterSucessful(true);\r\n        setEmail(email);\r\n      });\r\n  };\r\n\r\n  const registerDetail = [\r\n    [\"firstName\", \"First Name:\"],\r\n    [\"lastName\", \"Last Name:\"],\r\n    [\"email\", \"Email:\"],\r\n    [\"password\", \"Password:\"],\r\n    [\"organisationName\", \"Organisation Name:\"],\r\n    [\"organisationKind\", \"Organisation Kind:\"],\r\n  ];\r\n\r\n  return (\r\n    <FlexContainer>\r\n      <h2>Register</h2>\r\n      <p className=\"form-title\">Enter Details to register:</p>\r\n\r\n      {!isRegisterSucessful && (\r\n        <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n          {registerDetail.map(([value, placeholder], index) => (\r\n            <FormInput\r\n              key={`new-customer-${index}`}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              register={register}\r\n              errors={errors}\r\n            />\r\n          ))}\r\n\r\n          <MyBtn type=\"submit\">Register a new user</MyBtn>\r\n        </FormContainer>\r\n      )}\r\n\r\n      {isRegisterSucessful && (\r\n        <p>\r\n          Please check your <strong>{email}</strong> email for activate link to\r\n          continue login\r\n        </p>\r\n      )}\r\n    </FlexContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: 'Lato', sans-serif;\r\n    background: rgb(80,126,177);\r\n    background: linear-gradient(150deg, rgba(80,126,177,1) 0%, rgba(55,107,209,1) 8%, rgba(203,193,219,1) 35%, rgba(234,242,249,1) 68%, rgba(194,255,241,1) 85%, rgba(246,249,252,1) 100%);\r\n\r\n    @media screen and (max-width: 800px)  {\r\n      // padding: 10px;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    margin: 0;\r\n    padding: 3rem 0 1rem;\r\n  }\r\n\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n    color: midnightblue;\r\n    &:hover {\r\n      color: purple;\r\n    }\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #1ED5B9;\r\n      transition: background-color 100ms ease-in-out;\r\n    }\r\n    transition: background-color 100ms ease-in-out;\r\n  }\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 17px;\r\n    font-size: 25px;\r\n    filter: invert(99%) sepia(1%) saturate(6218%) hue-rotate(189deg)\r\n      brightness(119%) contrast(100%);\r\n    &:hover {\r\n      cursor: pointer;\r\n      opacity: 0.7;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CustomerInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  width: 50vw;\r\n  margin: 2rem auto 0;\r\n  background-color: #61dafb30;\r\n  padding: 1rem 4rem 2rem;\r\n\r\n  div {\r\n    display: flex;\r\n\r\n    button {\r\n      &:first-of-type {\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { InputFlexContainer, InputOutsideContainer } from \"./FormInput.styles\";\n\nconst EditingFormInput = ({\n  register,\n  nameString,\n  placeholder,\n  setValue,\n  value,\n  errors,\n}) => {\n  return (\n    <InputOutsideContainer>\n      <InputFlexContainer>\n        <label htmlFor={nameString}>{placeholder}</label>\n        <input\n          ref={register}\n          id={nameString}\n          type={nameString}\n          name={nameString}\n          defaultValue={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          errors={errors[nameString]}\n        />\n      </InputFlexContainer>\n      {errors[nameString] && <p>{errors[nameString].message}</p>}\n    </InputOutsideContainer>\n  );\n};\n\nexport default EditingFormInput;\n","import styled from \"styled-components\";\n\nexport const LoggedinHeaderContainer = styled.div`\n  h1 {\n    font-family: \"Pacifico\", cursive;\n    font-size: 3rem;\n    color: crimson;\n  }\n\n  .user-info {\n    font-size: 1.3rem;\n\n    span {\n      font-family: \"Pacifico\", cursive;\n      margin-left: 5px;\n      &:first-of-type {\n        margin-right: 10px;\n      }\n    }\n  }\n\n  .customer-number-info {\n    font-size: 1.3rem;\n    strong {\n      margin-left: 5px;\n    }\n  }\n`;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserKit from \"../data/UserKit\";\nimport { BtnSmall } from \"./MyBtn.styles\";\nimport { LoggedinHeaderContainer } from \"./LoggedinHeader.styles\";\nconst userKit = new UserKit();\n\nconst LoggedinHeader = ({ user }) => {\n  const history = useHistory();\n  const handleLogout = () => {\n    userKit.deleteToken();\n    history.push(\"/\");\n  };\n\n  return (\n    <LoggedinHeaderContainer>\n      <h1>Welcome to Your Awesome Business App!</h1>\n      <div className=\"user-info\">\n        <strong>Name: </strong>\n        <span>\n          {user.firstName} {user.lastName}\n        </span>\n        <strong>E-mail: </strong> <span>{user.email}</span>\n        <BtnSmall logout onClick={handleLogout}>\n          Logout\n        </BtnSmall>\n      </div>\n    </LoggedinHeaderContainer>\n  );\n};\n\nexport default LoggedinHeader;\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext({});\r\nconst GlobalContext = ({ children }) => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [customerNr, setCustomerNr] = useState(\"\");\r\n\r\n  return React.createElement(\r\n    UserContext.Provider,\r\n    {\r\n      value: {\r\n        customers,\r\n        setCustomers,\r\n        user,\r\n        setUser,\r\n        customerNr,\r\n        setCustomerNr,\r\n      },\r\n    },\r\n    children\r\n  );\r\n};\r\n\r\nexport default GlobalContext;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { BtnSmall } from \"../components/MyBtn.styles\";\r\nimport { CustomerInfoContainer } from \"./CustomerPage.styles\";\r\nimport EditingFormInput from \"../components/EditingFormInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { schema } from \"../data/Schema\";\r\nimport { FormContainer } from \"../components/RegisterForm.styles\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport LoggedinHeader from \"../components/LoggedinHeader\";\r\nimport { UserContext } from \"../context/GlobalContext\";\r\n\r\nconst userKit = new UserKit();\r\n\r\nconst CustomerPage = () => {\r\n  const { id } = useParams();\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [originalCustomer, setOriginalCustomer] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [organisationNr, setOrganisationNr] = useState(\"\");\r\n  const [paymentTerm, setPaymentTerm] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [reference, setReference] = useState(\"\");\r\n  const [vatNr, setVatNr] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const setCustomerDetailInfoArea = () => {\r\n    userKit\r\n      .getCustomer(id)\r\n      .then((res) => res.json())\r\n      .then(({ results: customers }) => {\r\n        const [currentCustomer] = customers.filter(\r\n          (customer) => customer.id === +id\r\n        );\r\n        setEmail(currentCustomer.email);\r\n        setName(currentCustomer.name);\r\n        setOrganisationNr(currentCustomer.organisationNr);\r\n        setPaymentTerm(currentCustomer.paymentTerm);\r\n        setPhoneNumber(currentCustomer.phoneNumber);\r\n        setReference(currentCustomer.reference);\r\n        setVatNr(currentCustomer.vatNr);\r\n        setWebsite(currentCustomer.website);\r\n        setIsLoading(false);\r\n        setOriginalCustomer(currentCustomer);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    userKit\r\n      .getLoginUser()\r\n      .then((res) => res.json())\r\n      .then(({ email, firstName, lastName }) =>\r\n        setUser({ email, firstName, lastName })\r\n      );\r\n    setCustomerDetailInfoArea(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    userKit.deleteCustomer(id);\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setIsUpdating(true);\r\n    drawUpdateCustomerInfoArea();\r\n  };\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const closeEditing = () => {\r\n    setIsLoading(false);\r\n    setIsUpdating(false);\r\n    setCustomerDetailInfoArea();\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const saveUpdate = () => {\r\n    setIsUpdating(false);\r\n    const updatedCustomer = {\r\n      ...originalCustomer,\r\n      email,\r\n      name,\r\n      organisationNr,\r\n      paymentTerm,\r\n      phoneNumber,\r\n      reference,\r\n      vatNr,\r\n      website,\r\n    };\r\n    return userKit\r\n      .editCustomerInfo(id, updatedCustomer)\r\n      .then((res) => res.json());\r\n  };\r\n\r\n  const renderCustomerInfo = () => (\r\n    <CustomerInfoContainer>\r\n      <p>\r\n        <strong>ID: </strong>\r\n        {id}\r\n      </p>\r\n      <p>\r\n        <strong>Name:</strong> {name}\r\n      </p>\r\n      <p>\r\n        <strong>E-mail: </strong>\r\n        {email}\r\n      </p>\r\n      <p>\r\n        <strong>Organisation Nr:</strong> {organisationNr}\r\n      </p>\r\n      <p>\r\n        <strong>Payment Term: </strong>\r\n        {paymentTerm}\r\n      </p>\r\n      <p>\r\n        <strong>Phone Number: </strong>\r\n        {phoneNumber}\r\n      </p>\r\n      <p>\r\n        <strong>Reference: </strong>\r\n        {reference}\r\n      </p>\r\n      <p>\r\n        <strong>Vat Nr: </strong>\r\n        {vatNr}\r\n      </p>\r\n      <p>\r\n        <strong>Website: </strong>\r\n        {website}\r\n      </p>\r\n      <div>\r\n        <BtnSmall onClick={() => handleDelete(id)}>Delete</BtnSmall>\r\n        <BtnSmall onClick={() => handleUpdate(id)}>Update</BtnSmall>\r\n      </div>\r\n    </CustomerInfoContainer>\r\n  );\r\n\r\n  const customerDetailList = [\r\n    [\"name\", \"Name *\", setName, name],\r\n    [\"organisationNr\", \"organisationNr *\", setName, name],\r\n    [\"vatNr\", \"vatNr *\", setVatNr, vatNr],\r\n    [\"reference\", \"reference *\", setReference, reference],\r\n    [\"paymentTerm\", \"paymentTerm *\", setPaymentTerm, paymentTerm],\r\n    [\"website\", \"website *\", setWebsite, website],\r\n    [\"email\", \"email *\", setEmail, email],\r\n    [\"phoneNumber\", \"phoneNumber *\", setPhoneNumber, phoneNumber],\r\n  ];\r\n\r\n  const drawUpdateCustomerInfoArea = () => (\r\n    <FormContainer update onSubmit={handleSubmit(saveUpdate)}>\r\n      <GrClose onClick={closeEditing} />\r\n      {customerDetailList.map(\r\n        ([nameString, placeholder, setValue, value], index) => (\r\n          <EditingFormInput\r\n            key={`customer-detail-${index}`}\r\n            nameString={nameString}\r\n            placeholder={placeholder}\r\n            setValue={setValue}\r\n            value={value}\r\n            register={register}\r\n            errors={errors}\r\n          />\r\n        )\r\n      )}\r\n\r\n      <BtnSmall type=\"submit\">Update</BtnSmall>\r\n    </FormContainer>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <LoggedinHeader user={user} />\r\n      {!isLoading && !isUpdating && <h3 className=\"detail-page-h3-title\">Customer Information Details:</h3>}\r\n      {isUpdating && <h3 className=\"detail-page-h3-title\">Editing Customer Information:</h3>}\r\n      {!isLoading && (\r\n        <BtnSmall onClick={handleClick}>Go back to HomePage</BtnSmall>\r\n      )}\r\n      {!isLoading && !isUpdating && renderCustomerInfo()}\r\n      {isUpdating && drawUpdateCustomerInfoArea()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n","import React from \"react\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport FormInput from \"./FormInput\";\r\nimport { FormContainer } from \"./RegisterForm.styles\";\r\nimport { MyBtn } from \"./MyBtn.styles\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport styled from \"styled-components\";\r\nimport { schema } from \"../data/Schema\";\r\n\r\nconst userKit = new UserKit();\r\n\r\nconst CreateNewCustomerForm = ({\r\n  showAddCustomerForm,\r\n  setShowAddCustomerForm,\r\n  setShowAddBtn,\r\n}) => {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = ({\r\n    name,\r\n    organisationNr,\r\n    vatNr,\r\n    reference,\r\n    paymentTerm,\r\n    website,\r\n    email,\r\n    phoneNumber,\r\n  }) => {\r\n    userKit\r\n      .createCustomer({\r\n        name,\r\n        organisationNr,\r\n        vatNr,\r\n        reference,\r\n        paymentTerm,\r\n        website,\r\n        email,\r\n        phoneNumber,\r\n      })\r\n      .then((res) => res.json());\r\n    setShowAddBtn(true);\r\n    setShowAddCustomerForm(false);\r\n  };\r\n\r\n  const closeAddCustomerForm = () => {\r\n    setShowAddBtn(true);\r\n    setShowAddCustomerForm(false);\r\n  };\r\n\r\n  const newCustomerDetailList = [\r\n    [\"name\", \"Name *\"],\r\n    [\"organisationNr\", \"organisationNr *\"],\r\n    [\"vatNr\", \"vatNr *\"],\r\n    [\"reference\", \"reference *\"],\r\n    [\"paymentTerm\", \"paymentTerm *\"],\r\n    [\"website\", \"website *\"],\r\n    [\"email\", \"email *\"],\r\n    [\"phoneNumber\", \"phoneNumber *\"],\r\n  ];\r\n\r\n  return showAddCustomerForm ? (\r\n    <>\r\n      <BlurLayerContainer />\r\n      <FormContainer customer onSubmit={handleSubmit(onSubmit)}>\r\n        <GrClose onClick={closeAddCustomerForm} />\r\n        {newCustomerDetailList.map(([value, placeholder], index) => (\r\n          <FormInput\r\n            key={`new-customer-${index}`}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            register={register}\r\n            errors={errors}\r\n          />\r\n        ))}\r\n\r\n        <MyBtn type=\"submit\">Create a new customer</MyBtn>\r\n      </FormContainer>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default CreateNewCustomerForm;\r\n\r\nconst BlurLayerContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: black;\r\n  opacity: 0.7;\r\n`;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CreateNewCustomerForm from \"../components/CreateNewCustomer\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { UserContext } from \"../context/GlobalContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { BtnSmall } from \"../components/MyBtn.styles\";\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport LoggedinHeader from \"../components/LoggedinHeader\";\r\n\r\nconst userKit = new UserKit();\r\nconst Home = () => {\r\n  const MAX_CUSTOMER_NUM = 10;\r\n  const {\r\n    user,\r\n    customers,\r\n    customerNr,\r\n    setUser,\r\n    setCustomers,\r\n    setCustomerNr,\r\n  } = useContext(UserContext);\r\n  const [showAddCustomerForm, setShowAddCustomerForm] = useState(false);\r\n  const [showAddBtn, setShowAddBtn] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!userKit.getToken()) {\r\n      history.push(\"/invalid\");\r\n    }\r\n\r\n    userKit\r\n      .getLoginUser()\r\n      .then((res) => res.json())\r\n      .then(({ email, firstName, lastName }) =>\r\n        setUser({ email, firstName, lastName })\r\n      );\r\n\r\n    getCustomerList();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getCustomerList = () => {\r\n    userKit\r\n      .getCustomerList()\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCustomers(data.results);\r\n        setCustomerNr(data.count);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const { signal } = abortController;\r\n    userKit\r\n      .getCustomerList(signal)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCustomers(data.results);\r\n        setCustomerNr(data.count);\r\n      });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customers, customerNr]);\r\n\r\n  const handleDelete = (id) => {\r\n    userKit.deleteCustomer(id);\r\n  };\r\n\r\n  const handleAddCustomer = () => {\r\n    setShowAddCustomerForm(true);\r\n    setShowAddBtn(false);\r\n  };\r\n\r\n  const renderCustomers = (customers) => {\r\n    return (\r\n      <Table>\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Name</Th>\r\n            <Th>Organisation Nr</Th>\r\n            <Th>Reference</Th>\r\n            <Th>Delete</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {customers\r\n            .sort((a, b) => a.id - b.id)\r\n            .map(({ name, organisationNr, reference, id }, index) => (\r\n              <Tr key={`customer-review-${index}`}>\r\n                <Td>\r\n                  <Link to={`/home/${id}`}>{name}</Link>\r\n                </Td>\r\n\r\n                <Td>\r\n                  <Link to={`/home/${id}`}>{organisationNr}</Link>\r\n                </Td>\r\n\r\n                <Td>\r\n                  <Link to={`/home/${id}`}>{reference}</Link>\r\n                </Td>\r\n\r\n                <Td>\r\n                  <BtnSmall\r\n                    onClick={() => {\r\n                      handleDelete(id);\r\n                    }}>\r\n                    Delete\r\n                  </BtnSmall>\r\n                </Td>\r\n              </Tr>\r\n            ))}\r\n        </Tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoggedinHeader user={user} />\r\n\r\n      {customerNr === 0 ? (\r\n        <>\r\n          <h3>You don't have any customer.</h3>\r\n          {showAddBtn && (\r\n            <BtnSmall onClick={handleAddCustomer}>Add a new customer</BtnSmall>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p className=\"customer-number-info\">\r\n            Your customers number is: <strong>{customerNr}</strong>\r\n          </p>\r\n          {customers && renderCustomers(customers)}\r\n        </>\r\n      )}\r\n\r\n      <hr />\r\n\r\n      {customerNr !== MAX_CUSTOMER_NUM && showAddBtn && (\r\n        <BtnSmall onClick={handleAddCustomer}>Add a new customer</BtnSmall>\r\n      )}\r\n\r\n      <CreateNewCustomerForm\r\n        showAddCustomerForm={showAddCustomerForm}\r\n        setShowAddCustomerForm={setShowAddCustomerForm}\r\n        setShowAddBtn={setShowAddBtn}\r\n      />\r\n\r\n      {customerNr === MAX_CUSTOMER_NUM && (\r\n        <p>\r\n          You have reached maxmum customer amount, congrats!\r\n          <span role=\"img\" aria-label=\"ghost\">\r\n            👻\r\n          </span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoginFormContainer = styled.form`\r\n  padding: 30vh 20vw;\r\n  font-family: \"PT Sans Narrow\", sans-serif;\r\n\r\n  h1 {\r\n    padding-bottom: 1.5rem;\r\n  }\r\n  div {\r\n    position: relative;\r\n\r\n    input,\r\n    label,\r\n    button {\r\n      width: 25vw;\r\n      min-width: 200px;\r\n      margin: auto;\r\n      margin-bottom: 1rem;\r\n      height: 2rem;\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n\r\n    input {\r\n      &:first-child {\r\n        top: 0;\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        top: 3rem;\r\n      }\r\n    }\r\n\r\n    button {\r\n      top: 6rem;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport styled from \"styled-components\";\r\nimport { LoginFormContainer } from \"./Login.styles\";\r\nimport { BtnSmall } from \"../components/MyBtn.styles\";\r\nimport { InputFlexContainer } from \"../components/FormInput.styles\";\r\n\r\nconst WarningContainer = styled.p`\r\n  color: red;\r\n`;\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const searchString = history.location.search;\r\n  const urlParameters = new URLSearchParams(searchString);\r\n  const [uid] = useState(urlParameters.get(\"uid\"));\r\n  const [token] = useState(urlParameters.get(\"token\"));\r\n  const [loginEmail, setLoginEmail] = useState(null);\r\n  const [loginPassword, setLoginPassword] = useState(null);\r\n  const [errors, setErrors] = useState(null);\r\n  const [isActiveUser, setIsActiveUser] = useState(true);\r\n  const userKit = new UserKit();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const { signal } = abortController;\r\n    userKit.activateUser(uid, token, signal).then((res) => {\r\n      if (!res.ok) {\r\n        setIsActiveUser(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      abortController.abort();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (!isActiveUser) {\r\n      history.push(\"/invalid\");\r\n    } else {\r\n      userKit\r\n        .login(loginEmail, loginPassword)\r\n        .then((res) => res.json())\r\n        .then(({ token }) => {\r\n          if (token) {\r\n            userKit.setToken(token);\r\n            history.push(\"/home\");\r\n          } else {\r\n            setErrors(\"Invalid Email Address or Password!\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginFormContainer onSubmit={handleLogin}>\r\n      {isActiveUser && (\r\n        <h1>\r\n          Your account is now activated. Please login to get your customer\r\n          information.\r\n        </h1>\r\n      )}\r\n\r\n      {!isActiveUser && (\r\n        <h1>\r\n          Before you can login, you must activate your account with the link\r\n          sent to your email address.\r\n        </h1>\r\n      )}\r\n\r\n      {errors && <WarningContainer>{errors}</WarningContainer>}\r\n\r\n      <InputFlexContainer>\r\n        <input\r\n          placeholder=\"Email Address\"\r\n          onChange={(e) => {\r\n            setLoginEmail(e.target.value);\r\n            setErrors(null);\r\n          }}\r\n        />\r\n        <input\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          onChange={(e) => {\r\n            setLoginPassword(e.target.value);\r\n            setErrors(null);\r\n          }}\r\n        />\r\n        <BtnSmall login type=\"submit\">\r\n          Login\r\n        </BtnSmall>\r\n      </InputFlexContainer>\r\n    </LoginFormContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n// value=\"ayumi919@163.com\" or \"shan.mi.fanfan@gmail.com\"\r\n// value=\"js-fend-19\"\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nclass NotFoundPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <FlexContainer>\r\n        <div>\r\n          <img\r\n            src=\"https://i.imgur.com/Q2BAOd2.png\"\r\n            alt=\"not-found-img-placeholder\"\r\n          />\r\n          <p className=\"text-center\">\r\n            <strong>\r\n              Please check your URL and try agian.\r\n              <span role=\"img\" aria-label=\"crying face\">\r\n                😢\r\n              </span>\r\n            </strong>\r\n          </p>\r\n          <p className=\"text-center\">\r\n          <Link to={process.env.PUBLIC_URL + '/'}>Go back to HomePage</Link>\r\n          </p>\r\n        </div>\r\n      </FlexContainer>\r\n    );\r\n  }\r\n}\r\nexport default NotFoundPage;\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  /* place-self: center; */\r\n\r\n  img {\r\n    width: 40%;\r\n\r\n    @media screen and (min-width: 1300px) {\r\n      width: unset;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyBtn } from \"../components/MyBtn.styles\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst MessageContainer = styled.div`\r\n  padding: 30vh 20vw;\r\n  font-family: \"PT Sans Narrow\", sans-serif;\r\n\r\n  button {\r\n    width: 200px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst InvalidPage = () => {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <MessageContainer>\r\n      <h1>\r\n        You need to login and activate your account with the link sent to your\r\n        email address to get access to previous page.\r\n      </h1>\r\n      <MyBtn onClick={handleClick}>Go Home</MyBtn>\r\n    </MessageContainer>\r\n  );\r\n};\r\n\r\nexport default InvalidPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\nimport CustomerPage from \"./pages/CustomerPage\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\n\r\nimport styled from \"styled-components\";\r\nimport InvalidPage from \"./pages/InvalidPage\";\r\nconst RootContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nconst SITE_ROOT_URL = \"https://shan-mi.github.io/businessApp/\";\r\n\r\nfunction App() {\r\n  return (\r\n    <RootContainer className=\"App\">\r\n      <GlobalStyle />\r\n      <Switch>\r\n        <Route path={process.env.PUBLIC_URL + '/'} exact component={RegisterForm} />\r\n        <Route path={process.env.PUBLIC_URL + '/login'} exact component={Login} />\r\n        <Route path={process.env.PUBLIC_URL + '/home'} exact component={Home} />\r\n        <Route path={process.env.PUBLIC_URL + '/home/:id'} exact component={CustomerPage} />\r\n        <Route path={process.env.PUBLIC_URL + '/invalid'} exact component={InvalidPage} />\r\n        <Route path=\"*\" component={NotFoundPage} />\r\n      </Switch>\r\n    </RootContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n/* \r\nfont-family: 'Pacifico', cursive;  => title\r\nfont-family: 'Lato', sans-serif;\r\nfont-family: 'PT Sans Narrow', sans-serif;\r\nhttps://dribbble.com/shots/5729803-Registration-Form-With-Dark-UI/attachments => layout for register\r\n*/\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport GlobalContext from \"./context/GlobalContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContext>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </GlobalContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}